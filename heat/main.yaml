heat_template_version: rocky # 2018-08-31

description: cPouta VM deployment - Creates Ubuntu and Rocky Linux VMs with security groups, network ports, and floating IPs

parameters:
  ubuntu_security_group_ports:
    type: comma_delimited_list
    label: Allowed ports
    description: List of ports to open in Ubuntu security group (SSH, HTTP, HTTPS)
  
  rocky_security_group_ports:
    type: comma_delimited_list
    label: Allowed ports
    description: List of ports to open in Rocky security group (SSH, HTTP, HTTPS)

  # See all flavors: https://docs.csc.fi/cloud/pouta/vm-flavors-and-billing/ 
  ubuntu_flavor:
    type: string
    label: Instance Type
    description: Flavor type for Ubuntu
    constraints:
      - allowed_values:
        - standard.tiny   # VCPUs: 1 | RAM: 0.9 | Billing/h: 0.25
        - standard.small  # VCPUs: 2 | RAM: 1.9 | Billing/h: 0.5
        - standard.medium # VCPUs: 3 | RAM: 3.9 | Billing/h: 1
        - standard.large  # VCPUs: 4 | RAM: 7.8 | Billing/h: 2
  
  # See all flavors: https://docs.csc.fi/cloud/pouta/vm-flavors-and-billing/ 
  rocky_flavor:
    type: string
    label: Instance Type
    description: Flavor type for Rocky
    constraints:
      - allowed_values:
        - standard.tiny   # VCPUs: 1 | RAM: 0.9 | Billing/h: 0.25
        - standard.small  # VCPUs: 2 | RAM: 1.9 | Billing/h: 0.5
        - standard.medium # VCPUs: 3 | RAM: 3.9 | Billing/h: 1
        - standard.large  # VCPUs: 4 | RAM: 7.8 | Billing/h: 2
  
  ubuntu_image:
    type: string
    description: Ubuntu image

  rocky_image:
    type: string
    description: Rocky image

  private_network_id:
    type: string
    label: Private Network ID
    description: ID of the private Neutron network for ports

  public_network_id:
    type: string
    label: Public Network ID
    description: ID of the public Neutron network for floating IPs

resources:
  # Security Groups
  ubuntu_security_group: 
    type: OS::Neutron::SecurityGroup
    description: Security group for Ubuntu
    properties: 
      name: ubuntu_security_group
      rules: 
        repeat:
          for_each:
            <%port%>: { get_param: ubuntu_security_group_ports }
          template: 
            protocol: tcp
            port_range_min: <%port%>
            port_range_max: <%port%>
            ethertype: IPv4
            direction: ingress
            remote_ip_prefix: "0.0.0.0/0"

  rocky_security_group: 
    type: OS::Neutron::SecurityGroup
    description: Security group for Rocky
    properties: 
      name: rocky_security_group
      rules: 
        repeat:
          for_each:
            <%port%>: { get_param: rocky_security_group_ports }
          template: 
            protocol: tcp
            port_range_min: <%port%>
            port_range_max: <%port%>
            ethertype: IPv4
            direction: ingress
            remote_ip_prefix: "0.0.0.0/0"

  # SSH Key pairs
  ubuntu_ssh_key:
    type: OS::Nova::KeyPair
    properties:
      name: ubuntu_key_pair
      public_key: { get_file: ../keys/ubuntu_key.pub }

  rocky_ssh_key:
    type: OS::Nova::KeyPair
    properties:
      name: rocky_key_pair
      public_key: { get_file: ../keys/rocky_key.pub }
 
  # Network ports
  ubuntu_private_network_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_network_id }
      security_groups: [{get_resource: ubuntu_security_group}]
  
  rocky_private_network_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: private_network_id }
      security_groups: [{get_resource: rocky_security_group}]

  # VM instances
  ubuntu_vm:
    type: OS::Nova::Server
    properties:
      name: ubuntu-vm
      flavor: { get_param: ubuntu_flavor }
      availability_zone: nova
      key_name: { get_resource: ubuntu_ssh_key }
      networks: [ port: { get_resource: ubuntu_private_network_port }]
      block_device_mapping_v2:
        - device_name: vda
          image_id: { get_param: ubuntu_image }
          volume_size: 80
          boot_index: 0
          delete_on_termination: true # change to false if you want to preserve your volume
      diskConfig: AUTO

  rocky_vm:
    type: OS::Nova::Server
    properties:
      name: rocky-vm
      flavor: { get_param: rocky_flavor }
      availability_zone: nova
      key_name: { get_resource: rocky_ssh_key }
      networks: [ port: { get_resource: rocky_private_network_port }]
      block_device_mapping_v2:
        - device_name: vda
          image_id: { get_param: rocky_image }
          volume_size: 80
          boot_index: 0
          delete_on_termination: true # change to false if you want to preserve your volume
      diskConfig: AUTO

  # Floating IPs
  ubuntu_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_network_id }
  
  rocky_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_network_id }

  # Floating IP associations
  ubuntu_floating_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: ubuntu_floating_ip}
      port_id: { get_resource: ubuntu_private_network_port }

  rocky_floating_ip_association:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: rocky_floating_ip}
      port_id: { get_resource: rocky_private_network_port }

outputs:
  ubuntu_floating_ip: 
    description: Floating ip address for Ubuntu
    value: { get_attr: [ubuntu_floating_ip, floating_ip_address] }

  rocky_floating_ip: 
    description: Floating ip address for Rocky
    value: { get_attr: [rocky_floating_ip, floating_ip_address] }