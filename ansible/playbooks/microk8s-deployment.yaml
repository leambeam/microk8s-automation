- name: Microk8s install
  hosts: all
  gather_facts: false

  tasks:

    - name: Install microk8s
      ansible.builtin.command:
        cmd: snap install microk8s --classic
      become: true
      register: microk8s_install_result
      changed_when: "'snap \"microk8s\" is already installed' in microk8s_install_result.stdout"

    - name: Check if microk8s is running
      ansible.builtin.command:
        cmd: microk8s status --wait-ready
      become: true
      register: is_microk8s_running_result
      changed_when: false
      failed_when: "'microk8s is running' not in is_microk8s_running_result.stdout"

    - name: Create microk8s user
      ansible.builtin.user:
        name: ubuntu
        append: true
        groups: microk8s
      become: true

    - name: Create kube directory
      ansible.builtin.file:
        path: /home/ubuntu/.kube
        state: directory
        mode: '0700'
        owner: ubuntu
        group: ubuntu

    - name: Reset ssh connection to apply group changes
      ansible.builtin.meta: reset_connection

    - name: Enable microk8s addons
      ansible.builtin.command: "microk8s enable {{ item }}"
      loop:
        - ingress
        - cert-manager
        - hostpath-storage
      register: enable_addons_result
      changed_when: "'already enabled' not in enable_addons_result.stdout"

    - name: Get floating_ip
      ansible.builtin.command:
        cmd: dig +short myip.opendns.com @resolver1.opendns.com
      register: floating_ip_result
      changed_when: false

    - name: Get domain from floating_ip
      ansible.builtin.shell: |
        set -o pipefail
        dig +short -x {{ floating_ip_result.stdout }} | sed 's/\.$//'
      register: domain_result
      changed_when: false
      args:
        executable: /bin/bash

    - name: Enable metallb
      ansible.builtin.command:
        cmd: microk8s enable metallb "{{ floating_ip_result.stdout }}-{{ floating_ip_result.stdout }}"
      register: enable_metallb_result
      changed_when: "'already enabled' not in enable_metallb_result.stdout"

    - name: Get the PrestaShop helm chart
      ansible.builtin.git:
        repo: 'https://gitlab.labranet.jamk.fi/presta-shop-development-release-x/presta-shop-deployment/presta-shop-helm-x.git'
        dest: '/home/ubuntu/presta-shop-helm-x'
        single_branch: true
        version: main

    - name: Create directory for Prestashop volume
      ansible.builtin.file:
        path: /mnt/prestashop-storage
        state: directory
        mode: '0755'
      become: true

    - name: Check if the PrestaShop helm chart has already been deployed
      ansible.builtin.command:
        cmd: microk8s helm list --deployed
      register: helm_list_result
      changed_when: false

    - name: Deploy PrestaShop from the helm chart
      ansible.builtin.shell: |
        microk8s helm install presta-helm prestashop \
          --set prestashop.env.psDomain="{{ domain_result.stdout }}" \
          --set prestashop.ingress.enabled=true \
          --set prestashop.ingress.letsencrypt.isProd=true \
          --set common.persistence.enabled=true
      args:
        chdir: presta-shop-helm-x/
      when: "'presta-helm' not in helm_list_result.stdout"
      changed_when: "'presta-helm' not in helm_list_result.stdout"
